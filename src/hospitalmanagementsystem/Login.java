/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospitalmanagementsystem;

import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import java.sql.*;

/**
 *
 * @author HP
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userType = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        phoneNumberTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        signUpLink = new javax.swing.JButton();
        patient1 = new javax.swing.JRadioButton();
        doctor1 = new javax.swing.JRadioButton();
        registra1 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setLocation(new java.awt.Point(700, 300));
        setName("loginFrame"); // NOI18N

        jLabel1.setText("LOGIN");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel2.setText("Phone Number");

        phoneNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("User");

        jLabel4.setText("Password");

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        signUpLink.setText("Sign Up");
        signUpLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpLinkActionPerformed(evt);
            }
        });

        userType.add(patient1);
        patient1.setText("Patient");

        userType.add(doctor1);
        doctor1.setText("Doctor");

        userType.add(registra1);
        registra1.setText("Registra");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(signUpLink, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(patient1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(doctor1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(registra1))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(phoneNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(passwordField)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient1)
                    .addComponent(registra1)
                    .addComponent(doctor1))
                .addGap(36, 36, 36)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(signUpLink))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void phoneNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberTextFieldActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed

        String phoneNumber = "", password = "", uType = "";

        // extracting phone number
        try {
            phoneNumber = phoneNumberTextField.getText();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Enter Phone Number");
            phoneNumberTextField.requestFocus();
        }

        //extracting password
        try {
            char[] passwordArray = passwordField.getPassword();
            password = new String(passwordArray);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Enter Password");
            passwordField.requestFocus();
        }

        //extracting the user type
        try {
            JRadioButton selectedRadioButton = null;
            Enumeration<AbstractButton> buttons = userType.getElements();
            while (buttons.hasMoreElements()) {
                AbstractButton button = buttons.nextElement();
                if (button.isSelected()) {
                    selectedRadioButton = (JRadioButton) button;
                    break;
                }
            }
            uType = selectedRadioButton.getText();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Select a user type");

        }

        //validatind user Input
        if (phoneNumber.length() != 10) {
            JOptionPane.showMessageDialog(null, "Invalid Phone Number");
            phoneNumberTextField.setText("");
            phoneNumberTextField.requestFocus();
        } else {

            try {

                String sqlCommand = "";
                if (uType.equalsIgnoreCase("Patient")) {
                    sqlCommand = "Select PatientID from tblPatient where PhNumber='" + phoneNumber + "'";
                } else if (uType.equalsIgnoreCase("Doctor")) {
                    sqlCommand = "Select DOCID from tblDoctor where PhNumber='" + phoneNumber + "'";
                } else if (uType.equalsIgnoreCase("Registra")) {
                    sqlCommand = "Select RegistraID from tblRegistras where PhNumber='" + phoneNumber + "'";
                }
                //dc.DC.st = dc.DC.connection.(sqlCommand);
                // dc.DC.st.setString(1, userName);

                ResultSet rs = dc.DC.st.executeQuery(sqlCommand);

                if (rs.next()) {

                    String uniqueID = "";
                    String sqlCommand2 = "";
                    if (uType.equalsIgnoreCase("Patient")) {
                        uniqueID = rs.getString("PatientID");
                        sqlCommand2 = "Select FirstName, Password from tblPatient where PatientID=" + uniqueID + " and password='" + password + "'";
                    } else if (uType.equalsIgnoreCase("Doctor")) {
                        uniqueID = rs.getString("DOCID");
                        sqlCommand2 = "Select FirstName, Password from tblDoctor where DOCID=" + uniqueID + " and password='" + password + "'";
                    } else if (uType.equalsIgnoreCase("Registra")) {
                        uniqueID = rs.getString("RegistraID");
                        sqlCommand2 = "Select FirstName, Password from tblRegistras where RegistraID=" + uniqueID + " and password='" + password + "'";
                    }

                    ResultSet rs2 = dc.DC.st.executeQuery(sqlCommand2);

                    if (rs2.next()) {
                        this.setVisible(false);

                        if (uType.equalsIgnoreCase("Patient")) {
                            new patientHome(uniqueID).setVisible(true);
                        } else if (uType.equalsIgnoreCase("Doctor")) {
                            new patientHome(uniqueID).setVisible(true);
                        } else if (uType.equalsIgnoreCase("Registra")) {
                            new RegistraHome(uniqueID).setVisible(true);
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Incorrect Password");
                        phoneNumberTextField.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Cannot find user in " + uType);
                }
            } catch (SQLException ex) {

            }
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void signUpLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpLinkActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new patientRegistration().setVisible(true);

    }//GEN-LAST:event_signUpLinkActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton doctor1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JRadioButton patient1;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JRadioButton registra1;
    private javax.swing.JButton signUpLink;
    private javax.swing.ButtonGroup userType;
    // End of variables declaration//GEN-END:variables
}
